{"version":3,"file":"UDAHeaders.js","mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://UdanLibrary/./src/util/headers/addToClickObject.js","webpack://UdanLibrary/webpack/bootstrap","webpack://UdanLibrary/webpack/runtime/define property getters","webpack://UdanLibrary/webpack/runtime/hasOwnProperty shorthand","webpack://UdanLibrary/webpack/runtime/make namespace object","webpack://UdanLibrary/./src/Headers.js"],"sourcesContent":["export const ignoreTags = [\"body\", \"document\", \"window\", \"html\", \"script\", \"style\", \"iframe\", \"doctype\", \"link\", \"svg\", \"path\", \"meta\", \"circle\", \"rect\", \"stop\", \"defs\", \"linearGradient\", \"g\"];\n\nexport const AddToClickObjects = (node) => {\n  try {\n\n    let clickObject = {element: node, id: ''}\n\n    //checking whether the element is window or not\n    if (clickObject.element === window) {\n      return;\n    }\n\n    if(typeof clickObject?.element?.tagName === 'undefined') {\n      return;\n    }\n\n    let tag = clickObject?.element?.tagName;\n    if (tag && ignoreTags.indexOf(tag.toLowerCase()) !== -1) {\n      return;\n    }\n\n    if(node.classList && node.classList.contains('uda_exclude')){\n      return;\n    }\n\n    for (let i = 0; i < UDAClickObjects.length; i++) {\n      if (UDAClickObjects[i].element.isSameNode(clickObject.element)) {\n        //todo, discuss , how better to call actions, if multiple actions should be stored, or selector better.\n        return;\n      }\n    }\n\n    clickObject.id = UDAClickObjects.length;\n    UDAClickObjects.push(clickObject);\n  } catch (e) {\n    console.log('Unable to process clickable object - '+node, e);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// adding the click object that is registered via javascript\nwindow.UDAClickObjects = [];\nwindow.UDARemovedClickObjects = [];\n\nimport {AddToClickObjects} from \"./util/headers/addToClickObject\";\n\nEventTarget.prototype.addEventListener = function (addEventListener) {\n  return function () {\n    if (arguments[0] === \"click\") {\n      AddToClickObjects(this);\n    }\n    addEventListener.call(this, arguments[0], arguments[1], arguments[2]);\n  }\n}(EventTarget.prototype.addEventListener);\n"],"names":[],"sourceRoot":""}