"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetadataFactory = void 0;
var ArrayUtil_1 = require("../utils/ArrayUtil");
var explore_metadata_1 = require("./internal/explore_metadata");
var MetadataFactory;
(function (MetadataFactory) {
    function generate(checker, collection, type, options) {
        var e_1, _a;
        var metadata = (0, explore_metadata_1.explore_metadata)(checker)(options)(collection)(type, false);
        var _loop_1 = function (object) {
            object.recursive = object.properties.some(function (prop) {
                return ArrayUtil_1.ArrayUtil.has(prop.value.objects, function (elem) { return elem.name === object.name; }) ||
                    prop.value.arrays.some(function (meta) {
                        return ArrayUtil_1.ArrayUtil.has(meta.objects, function (elem) { return elem.name === object.name; });
                    });
            });
        };
        try {
            for (var _b = __values(collection.objects()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var object = _c.value;
                _loop_1(object);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return metadata;
    }
    MetadataFactory.generate = generate;
})(MetadataFactory = exports.MetadataFactory || (exports.MetadataFactory = {}));
//# sourceMappingURL=MetadataFactory.js.map