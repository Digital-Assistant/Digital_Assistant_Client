"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.iterate_metadata_constant = void 0;
var typescript_1 = __importDefault(require("typescript"));
var ArrayUtil_1 = require("../../utils/ArrayUtil");
var iterate_metadata_constant = function (checker) {
    return function (options) {
        return function (meta, type) {
            if (!options.constant)
                return false;
            var filter = function (flag) { return (type.getFlags() & flag) !== 0; };
            if (type.isLiteral()) {
                var value_1 = typeof type.value === "object"
                    ? BigInt("".concat(type.value.negative ? "-" : "").concat(type.value.base10Value))
                    : type.value;
                var constant = ArrayUtil_1.ArrayUtil.take(meta.constants, function (elem) { return elem.type === typeof value_1; }, function () { return ({
                    type: typeof value_1,
                    values: [],
                }); });
                ArrayUtil_1.ArrayUtil.add(constant.values, value_1, function (a, b) { return a === b; });
                return true;
            }
            else if (filter(typescript_1.default.TypeFlags.BooleanLiteral)) {
                var value = checker.typeToString(type) === "true";
                var constant = ArrayUtil_1.ArrayUtil.take(meta.constants, function (elem) { return elem.type === "boolean"; }, function () { return ({
                    type: "boolean",
                    values: [],
                }); });
                ArrayUtil_1.ArrayUtil.add(constant.values, value, function (a, b) { return a === b; });
                return true;
            }
            return false;
        };
    };
};
exports.iterate_metadata_constant = iterate_metadata_constant;
//# sourceMappingURL=iterate_metadata_constant.js.map