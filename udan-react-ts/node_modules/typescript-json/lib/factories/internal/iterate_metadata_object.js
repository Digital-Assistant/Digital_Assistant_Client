"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.iterate_metadata_object = void 0;
var typescript_1 = __importDefault(require("typescript"));
var Metadata_1 = require("../../metadata/Metadata");
var ArrayUtil_1 = require("../../utils/ArrayUtil");
var MetadataCollection_1 = require("../MetadataCollection");
var emplace_metadata_object_1 = require("./emplace_metadata_object");
var iterate_metadata_1 = require("./iterate_metadata");
var iterate_metadata_object = function (checker) {
    return function (options) {
        return function (collection) {
            return function (meta, type, parentResolved) {
                var filter = function (flag) { return (type.getFlags() & flag) !== 0; };
                if (!filter(typescript_1.default.TypeFlags.Object) && !type.isIntersection())
                    return false;
                if (type.isIntersection()) {
                    var fakeCollection_1 = new MetadataCollection_1.MetadataCollection();
                    var fakeSchema_1 = Metadata_1.Metadata.initialize();
                    type.types.forEach(function (t) {
                        return (0, iterate_metadata_1.iterate_metadata)(checker)(options)(fakeCollection_1)(fakeSchema_1, t, parentResolved);
                    });
                    if (fakeSchema_1.objects.length === 0 ||
                        fakeSchema_1.objects.length !== fakeSchema_1.size())
                        return true;
                }
                var obj = (0, emplace_metadata_object_1.emplace_metadata_object)(checker)(options)(collection)(type, meta.nullable);
                ArrayUtil_1.ArrayUtil.add(meta.objects, obj, function (elem) { return elem.name === obj.name; });
                return true;
            };
        };
    };
};
exports.iterate_metadata_object = iterate_metadata_object;
//# sourceMappingURL=iterate_metadata_object.js.map