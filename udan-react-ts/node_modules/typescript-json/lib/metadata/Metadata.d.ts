import { Atomic } from "../typings/Atomic";
import { IMetadata } from "./IMetadata";
import { IMetadataObject } from "./IMetadataObject";
import { MetadataConstant } from "./MetadataConstant";
import { MetadataObject } from "./MetadataObject";
export declare class Metadata {
    readonly any: boolean;
    readonly required: boolean;
    readonly nullable: boolean;
    readonly functional: boolean;
    readonly resolved: Metadata | null;
    readonly atomics: Atomic.Literal[];
    readonly constants: MetadataConstant[];
    readonly templates: Metadata[][];
    readonly arrays: Metadata[];
    readonly tuples: Metadata[][];
    readonly objects: MetadataObject[];
    /**
     * @hidden
     */
    private constructor();
    toJSON(): IMetadata;
    static from(meta: IMetadata, objects: IMetadataObject[]): Metadata;
    getName(): string;
    empty(): boolean;
    size(): number;
    bucket(): number;
    isConstant(): boolean;
}
export declare namespace Metadata {
    function intersects(x: Metadata, y: Metadata, deep: boolean): boolean;
    function covers(x: Metadata, y: Metadata): boolean;
}
