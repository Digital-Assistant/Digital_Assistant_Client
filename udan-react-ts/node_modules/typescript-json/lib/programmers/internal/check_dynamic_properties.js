"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.check_dynamic_properties = void 0;
var typescript_1 = __importDefault(require("typescript"));
var IdentifierFactory_1 = require("../../factories/IdentifierFactory");
var check_everything_1 = require("./check_everything");
var metadata_to_pattern_1 = require("./metadata_to_pattern");
var check_dynamic_properties = function (props) {
    return function (regular, dynamic) {
        var criteria = props.entries
            ? typescript_1.default.factory.createCallExpression(props.entries, undefined, [
                typescript_1.default.factory.createCallExpression(typescript_1.default.factory.createIdentifier("Object.entries"), undefined, [typescript_1.default.factory.createIdentifier("input")]),
                check_dynamic_property(props)(regular, dynamic),
            ])
            : typescript_1.default.factory.createCallExpression(IdentifierFactory_1.IdentifierFactory.join(typescript_1.default.factory.createCallExpression(typescript_1.default.factory.createIdentifier("Object.entries"), undefined, [typescript_1.default.factory.createIdentifier("input")]), props.assert ? "every" : "map"), undefined, [check_dynamic_property(props)(regular, dynamic)]);
        return (props.halt || (function (elem) { return elem; }))(props.assert ? criteria : (0, check_everything_1.check_everything)(criteria));
    };
};
exports.check_dynamic_properties = check_dynamic_properties;
var check_dynamic_property = function (props) {
    return function (regular, dynamic) {
        var e_1, _a;
        var key = typescript_1.default.factory.createIdentifier("key");
        var value = typescript_1.default.factory.createIdentifier("value");
        var statements = [
            typescript_1.default.factory.createIfStatement(typescript_1.default.factory.createStrictEquality(typescript_1.default.factory.createIdentifier("undefined"), value), typescript_1.default.factory.createReturnStatement(props.positive)),
        ];
        var add = function (exp, output) {
            return statements.push(typescript_1.default.factory.createIfStatement(exp, typescript_1.default.factory.createReturnStatement(output)));
        };
        if (props.equals === true && regular.length)
            add(is_regular_property(regular), props.positive);
        try {
            for (var dynamic_1 = __values(dynamic), dynamic_1_1 = dynamic_1.next(); !dynamic_1_1.done; dynamic_1_1 = dynamic_1.next()) {
                var entry = dynamic_1_1.value;
                add(typescript_1.default.factory.createCallExpression(typescript_1.default.factory.createIdentifier("RegExp(/".concat((0, metadata_to_pattern_1.metadata_to_pattern)(true)(entry.key), "/).test")), undefined, [key]), entry.expression);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (dynamic_1_1 && !dynamic_1_1.done && (_a = dynamic_1.return)) _a.call(dynamic_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var block = typescript_1.default.factory.createBlock(__spreadArray(__spreadArray([], __read(statements), false), [
            typescript_1.default.factory.createReturnStatement(props.equals === true
                ? props.superfluous(typescript_1.default.factory.createIdentifier("value"))
                : props.positive),
        ], false), true);
        return typescript_1.default.factory.createArrowFunction(undefined, undefined, [
            IdentifierFactory_1.IdentifierFactory.parameter(typescript_1.default.factory.createArrayBindingPattern([
                typescript_1.default.factory.createBindingElement(undefined, undefined, "key"),
                typescript_1.default.factory.createBindingElement(undefined, undefined, "value"),
            ])),
        ], undefined, undefined, block);
    };
};
var is_regular_property = function (regular) {
    return typescript_1.default.factory.createCallExpression(IdentifierFactory_1.IdentifierFactory.join(typescript_1.default.factory.createArrayLiteralExpression(regular.map(function (entry) {
        return typescript_1.default.factory.createStringLiteral(entry.key.getSoleLiteral());
    })), "some"), undefined, [
        typescript_1.default.factory.createArrowFunction(undefined, undefined, [IdentifierFactory_1.IdentifierFactory.parameter("prop")], undefined, undefined, typescript_1.default.factory.createStrictEquality(typescript_1.default.factory.createIdentifier("key"), typescript_1.default.factory.createIdentifier("prop"))),
    ]);
};
//# sourceMappingURL=check_dynamic_properties.js.map