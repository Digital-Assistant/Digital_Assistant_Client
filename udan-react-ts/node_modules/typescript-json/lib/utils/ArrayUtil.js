"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrayUtil = void 0;
var ArrayUtil;
(function (ArrayUtil) {
    function has(array, pred) {
        return array.some(pred);
    }
    ArrayUtil.has = has;
    function add(array, value, pred) {
        if (pred === void 0) { pred = function (x, y) { return x === y; }; }
        if (array.some(function (elem) { return pred(elem, value); }))
            return;
        array.push(value);
    }
    ArrayUtil.add = add;
    function set(array, value, key) {
        if (array.some(function (elem) { return key(elem) === key(value); }))
            return;
        array.push(value);
    }
    ArrayUtil.set = set;
    function take(array, pred, init) {
        var index = array.findIndex(pred);
        if (index !== -1)
            return array[index];
        var elem = init();
        array.push(elem);
        return elem;
    }
    ArrayUtil.take = take;
    function repeat(count, closure) {
        return new Array(count)
            .fill("")
            .map(function (_, index) { return closure(index, count); });
    }
    ArrayUtil.repeat = repeat;
    function flat(matrix) {
        var _a;
        return (_a = []).concat.apply(_a, __spreadArray([], __read(matrix), false));
    }
    ArrayUtil.flat = flat;
})(ArrayUtil = exports.ArrayUtil || (exports.ArrayUtil = {}));
//# sourceMappingURL=ArrayUtil.js.map