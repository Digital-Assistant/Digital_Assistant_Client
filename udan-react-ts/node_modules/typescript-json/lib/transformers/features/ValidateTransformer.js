"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidateTransformer = void 0;
var typescript_1 = __importDefault(require("typescript"));
var ValidateProgrammer_1 = require("../../programmers/ValidateProgrammer");
var ValidateTransformer;
(function (ValidateTransformer) {
    function transform(equals) {
        var SYMBOL = equals ? "validateEquals" : "validate";
        var MESSAGES = {
            NO_INPUT_VALUE: "Error on TSON.".concat(SYMBOL, "(): no input value."),
            GENERIC_ARGUMENT: "Error on TSON.".concat(SYMBOL, "(): non-specified generic argument."),
        };
        return function (project, modulo, expression) {
            if (expression.arguments.length !== 1)
                throw new Error(MESSAGES.NO_INPUT_VALUE);
            var type = expression.typeArguments && expression.typeArguments[0]
                ? project.checker.getTypeFromTypeNode(expression.typeArguments[0])
                : project.checker.getTypeAtLocation(expression.arguments[0]);
            if (type.isTypeParameter())
                throw new Error(MESSAGES.GENERIC_ARGUMENT);
            return typescript_1.default.factory.createCallExpression(ValidateProgrammer_1.ValidateProgrammer.generate(project, modulo, equals)(type), undefined, [expression.arguments[0]]);
        };
    }
    ValidateTransformer.transform = transform;
})(ValidateTransformer = exports.ValidateTransformer || (exports.ValidateTransformer = {}));
//# sourceMappingURL=ValidateTransformer.js.map